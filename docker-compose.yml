version: "3"
services:
  db:
    image: postgres
    restart: "on-failure"
    volumes:
      - db:/var/lib/postgresql
    env_file:
      - .env

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c 
            "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

    volumes:
      - ./:/code
    restart: "on-failure"
    tty: true
    stdin_open: true

    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
        sh -c "celery --app spa_app_core worker -l INFO --pool=solo"

    depends_on:
      - web
      - redis
      - db
    restart: on-failure
    env_file:
      - .env

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c  "celery -A spa_app_core beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"

    depends_on:
      - web
      - redis
      - db
    restart: on-failure
    env_file:
      - .env


  pg-admin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=${PGADMIN_LISTEN_PORT}
    restart: "on-failure"
    ports:
      - "8001:5050"
    depends_on:
      - db

volumes:
  db:
